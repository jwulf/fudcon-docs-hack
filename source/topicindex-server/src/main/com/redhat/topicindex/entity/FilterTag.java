package com.redhat.topicindex.entity;

// Generated Apr 14, 2011 12:17:30 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Transient;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.envers.Audited;
import org.hibernate.validator.NotNull;

import com.redhat.topicindex.entity.base.AuditedEntity;

/**
 * FilterTag generated by hbm2java
 */
@Entity
@Audited
@Table(name = "FilterTag")
public class FilterTag extends AuditedEntity<FilterTag> implements java.io.Serializable
{
	private static final long serialVersionUID = -1480119876615559516L;
	private Integer filterTagId;
	private Filter filter;
	private Tag tag;
	private int tagState;

	public FilterTag()
	{
		super(FilterTag.class);
	}

	public FilterTag(final Filter filter, final Tag tag, final int tagState)
	{
		super(FilterTag.class);
		this.filter = filter;
		this.tag = tag;
		this.tagState = tagState;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "FilterTagID", unique = true, nullable = false)
	public Integer getFilterTagId()
	{
		return this.filterTagId;
	}

	public void setFilterTagId(Integer filterTagId)
	{
		this.filterTagId = filterTagId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FilterID", nullable = false)
	@NotNull
	public Filter getFilter()
	{
		return this.filter;
	}

	public void setFilter(final Filter filter)
	{
		this.filter = filter;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TagID", nullable = false)
	@NotNull
	public Tag getTag()
	{
		return this.tag;
	}

	public void setTag(final Tag tag)
	{
		this.tag = tag;
	}

	@Column(name = "TagState", nullable = false)
	public int getTagState()
	{
		return this.tagState;
	}

	public void setTagState(final int tagState)
	{
		this.tagState = tagState;
	}

	@Override
	@Transient
	public Integer getId()
	{
		return this.filterTagId;
	}

}
