package com.redhat.topicindex.entity;

// Generated Aug 11, 2011 2:31:45 PM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.PreRemove;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.UniqueConstraint;

import org.hibernate.envers.Audited;
import org.hibernate.validator.NotNull;

import com.redhat.topicindex.entity.base.AuditedEntity;

/**
 * RoleToRole generated by hbm2java
 */
@Entity
@Audited
@Table(name = "RoleToRole", uniqueConstraints = @UniqueConstraint(columnNames = { "PrimaryRole", "SecondaryRole", "RelationshipType" }))
public class RoleToRole extends AuditedEntity<RoleToRole> implements java.io.Serializable
{
	private static final long serialVersionUID = -4323051325365483977L;
	private Integer roleToRoleId;
	private RoleToRoleRelationship roleToRoleRelationship;
	private Role primaryRole;
	private Role secondaryRole;

	public RoleToRole()
	{
		super(RoleToRole.class);
	}

	public RoleToRole(final RoleToRoleRelationship roleToRoleRelationship, final Role primaryRole, final Role secondaryRole)
	{
		super(RoleToRole.class);
		this.roleToRoleRelationship = roleToRoleRelationship;
		this.primaryRole = primaryRole;
		this.secondaryRole = secondaryRole;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "RoleToRoleID", unique = true, nullable = false)
	public Integer getRoleToRoleId()
	{
		return this.roleToRoleId;
	}

	public void setRoleToRoleId(Integer roleToRoleId)
	{
		this.roleToRoleId = roleToRoleId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "RelationshipType", nullable = false)
	@NotNull
	public RoleToRoleRelationship getRoleToRoleRelationship()
	{
		return this.roleToRoleRelationship;
	}

	public void setRoleToRoleRelationship(final RoleToRoleRelationship roleToRoleRelationship)
	{
		this.roleToRoleRelationship = roleToRoleRelationship;
	}

	/*
	 * @Column(name = "PrimaryRole", nullable = false) public int getPrimaryRole()
	 * { return this.primaryRole; }
	 * 
	 * public void setPrimaryRole(int primaryRole) { this.primaryRole =
	 * primaryRole; }
	 * 
	 * @Column(name = "SecondaryRole", nullable = false) public int
	 * getSecondaryRole() { return this.secondaryRole; }
	 * 
	 * public void setSecondaryRole(int secondaryRole) { this.secondaryRole =
	 * secondaryRole; }
	 */

	@ManyToOne
	@JoinColumn(name = "PrimaryRole", nullable = false)
	@NotNull
	public Role getPrimaryRole()
	{
		return this.primaryRole;
	}

	public void setPrimaryRole(final Role primaryRole)
	{
		this.primaryRole = primaryRole;
	}

	@ManyToOne
	@JoinColumn(name = "SecondaryRole", nullable = false)
	@NotNull
	public Role getSecondaryRole()
	{
		return this.secondaryRole;
	}

	public void setSecondaryRole(final Role secondaryRole)
	{
		this.secondaryRole = secondaryRole;
	}

	@SuppressWarnings("unused")
	@PreRemove
	private void preRemove()
	{
		primaryRole.getParentRoleToRole().remove(this);
		secondaryRole.getChildrenRoleToRole().remove(this);
	}

	@Override
	@Transient
	public Integer getId()
	{
		return this.roleToRoleId;
	}

}
