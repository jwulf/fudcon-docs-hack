package com.redhat.topicindex.entity;

// Generated Oct 21, 2011 10:43:30 AM by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Transient;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.hibernate.envers.Audited;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

import com.redhat.topicindex.entity.base.AuditedEntity;

/**
 * FilterOption generated by hbm2java
 */
@Audited
@Entity
@Table(name = "FilterLocale", uniqueConstraints = @UniqueConstraint(columnNames =
{ "LocaleName", "FilterID" }))
public class FilterLocale extends AuditedEntity<FilterLocale> implements java.io.Serializable
{
	private static final long serialVersionUID = -7054018830978278379L;
	private Integer filterLocaleId;
	private Filter filter;
	private String localeName;
	private int localeState;

	public FilterLocale()
	{
		super(FilterLocale.class);
	}

	public FilterLocale(final Filter filter, final String filterLocaleName, final int filterLocaleState)
	{
		super(FilterLocale.class);
		this.filter = filter;
		this.localeName = filterLocaleName;
		this.localeState = filterLocaleState;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "FilterLocaleID", unique = true, nullable = false)
	public Integer getFilterLocaleId()
	{
		return this.filterLocaleId;
	}

	public void setFilterLocaleId(Integer filterLocaleId)
	{
		this.filterLocaleId = filterLocaleId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FilterID", nullable = false)
	@NotNull
	public Filter getFilter()
	{
		return this.filter;
	}

	public void setFilter(final Filter filter)
	{
		this.filter = filter;
	}

	@Column(name = "LocaleName", nullable = false, length = 512)
	@NotNull
	@Length(max = 512)
	public String getLocaleName()
	{
		return this.localeName;
	}

	public void setLocaleName(final String localeName)
	{
		this.localeName = localeName;
	}

	@Column(name = "LocaleState", nullable = false)
	public int getLocaleState()
	{
		return this.localeState;
	}

	public void setLocaleState(final int localeState)
	{
		this.localeState = localeState;
	}

	@Override
	@Transient
	public Integer getId()
	{
		return this.filterLocaleId;
	}

}
